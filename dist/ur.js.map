{"version":3,"sources":["dist/ur.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","state","onSet","ur","now","root","undo","moveto","back","redo","forward","can","$","path","concat","split","filter","slice","$$","save","fragment","this","get","deepcopy","obj","toString","match","toLowerCase","map","v","Object","keys","reduce","d","k","getfragment","set","setfragment","merge","assign","node","step","value"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n// undo/redo implemented on an object\nmodule.exports = function (state, onSet) {\n\tvar now = {},\n\t    ur;\n\n\tonSet = onSet || function () {\n\t\treturn undefined;\n\t};\n\tstate = { root: state };\n\tur = {\n\t\tundo: function undo() {\n\t\t\treturn moveto(now.back);\n\t\t},\n\t\tredo: function redo() {\n\t\t\treturn moveto(now.forward);\n\t\t},\n\t\tcan: {\n\t\t\tundo: function undo() {\n\t\t\t\treturn !!now.back;\n\t\t\t},\n\t\t\tredo: function redo() {\n\t\t\t\treturn !!now.forward;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction $(path) {\n\t\tpath = ['root'].concat(parsepath(path));\n\n\t\tvar $$ = {\n\t\t\tsave: function save() {\n\t\t\t\tnow.path = path.slice();\n\t\t\t\tnow.fragment = this.get();\n\t\t\t\tnow.forward = { back: now };\n\t\t\t\tnow = now.forward;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\treturn deepcopy(getfragment(state, path));\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tsetfragment(state, path, v);\n\t\t\t\tonSet(path);\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tmerge: function merge(v) {\n\t\t\t\tObject.assign(getfragment(state, path), v);\n\t\t\t\tonSet(path);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t};\n\n\t\tObject.assign($, ur);\n\t\tObject.assign($$, ur);\n\n\t\treturn $$;\n\t}\n\n\treturn $;\n\n\tfunction parsepath(path) {\n\t\tpath = path || [];\n\t\treturn typeof path === 'string' ? path.split(/\\.|\\[|\\]/).filter(function (i) {\n\t\t\treturn i !== \"\";\n\t\t}) : path.slice();\n\t}\n\n\tfunction moveto(node) {\n\t\tif (node) {\n\t\t\tnow.path = node.path;\n\t\t\tnow.fragment = getfragment(state, node.path);\n\t\t\tsetfragment(state, node.path, node.fragment);\n\t\t\tdelete node.path;\n\t\t\tdelete node.fragment;\n\t\t\tnow = node;\n\t\t}\n\t}\n\n\tfunction getfragment(state, path) {\n\t\treturn path.reduce(function (s, step) {\n\t\t\treturn s[step];\n\t\t}, state);\n\t}\n\n\tfunction setfragment(state, path, value) {\n\t\tvar s = getfragment(state, path.slice(0, -1));\n\t\ts[path.slice(-1)[0]] = value;\n\t}\n\n\tfunction deepcopy(obj) {\n\t\tswitch (toType(obj)) {\n\t\t\tcase 'array':\n\t\t\t\treturn obj.map(function (v) {\n\t\t\t\t\treturn deepcopy(v);\n\t\t\t\t});\n\t\t\tcase 'object':\n\t\t\t\treturn Object.keys(obj).reduce(function (d, k) {\n\t\t\t\t\td[k] = deepcopy(obj[k]);\n\t\t\t\t\treturn d;\n\t\t\t\t}, {});\n\t\t\tdefault:\n\t\t\t\treturn obj;\n\t\t}\n\t}\n\n\tfunction toType(obj) {\n\t\treturn {}.toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\t}\n};\n\n},{}]},{},[1]);\n"]}