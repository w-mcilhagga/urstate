(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";module.exports=function urstate(state,onSet){var now={},ur;onSet=onSet||function(){return undefined};state={root:state};ur={undo:function undo(){return moveto(now.back)},redo:function redo(){return moveto(now.forward)},can:{undo:function undo(){return!!now.back},redo:function redo(){return!!now.forward}}};function $(path){path=["root"].concat(parsepath(path));var $$={save:function save(){now.path=path.slice();now.fragment=this.get();now.forward={back:now};now=now.forward;return this},get:function get(){return deepcopy(getfragment(state,path))},set:function set(v){setfragment(state,path,v);onSet(path);return this},merge:function merge(v){Object.assign(getfragment(state,path),v);onSet(path);return this}};Object.assign($,ur);Object.assign($$,ur);return $$}return $;function parsepath(path){path=path||[];return typeof path==="string"?path.split(/\.|\[|\]/).filter(function(i){return i!==""}):path.slice()}function moveto(node){if(node){now.path=node.path;now.fragment=getfragment(state,node.path);setfragment(state,node.path,node.fragment);delete node.path;delete node.fragment;now=node}}function getfragment(state,path){return path.reduce(function(s,step){return s[step]},state)}function setfragment(state,path,value){var s=getfragment(state,path.slice(0,-1));s[path.slice(-1)[0]]=value}function deepcopy(obj){switch(toType(obj)){case"array":return obj.map(function(v){return deepcopy(v)});case"object":return Object.keys(obj).reduce(function(d,k){d[k]=deepcopy(obj[k]);return d},{});default:return obj}}function toType(obj){return{}.toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}}},{}]},{},[1]);
//# sourceMappingURL=urstate.js.map